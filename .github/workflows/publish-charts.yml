name: Publish Helm charts
on: # rebuild any PRs and main branch changes
  push:
    branches:
      - main
env:
  HELM_VERSION: 3.8.1
# Remove all permissions by default.
permissions: {}
jobs:
  build_charts:
    if: ${{ github.repository_owner == 'dalbani' }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Check out main branch
        uses: actions/checkout@v5
        with:
          ref: main
          path: main
          submodules: 'true'
      - name: Check out gh-pages branch
        uses: actions/checkout@v5
        with:
            ref: gh-pages
            path: gh-pages
            persist-credentials: false
            fetch-depth: 0
      - name: Install helm
        run: |
          HELM_TARBALL="helm-v${HELM_VERSION}-linux-amd64.tar.gz"
          curl -SsLfO "https://get.helm.sh/${HELM_TARBALL}" && sudo tar xf "$HELM_TARBALL" --strip-components 1 -C /usr/local/bin
      - name: Build new/updated charts
        run: |
          set -eu

          cd main/bitnami/bitnami

          find . -type f -exec sed -i 's#oci://registry-1.docker.io/bitnamicharts#oci://ghcr.io/dalbani/freebitnamicharts#' {} \;
          find . -type f -name Chart.yaml -exec sed -i -E 's#https://github.com/bitnami/charts/tree/main/bitnami/.+#https://github.com/dalbani/freebitnamicharts/#' {} \;

          for chart_name in *; do
            if [[ ! -d "${chart_name}" ]]; then
              continue
            fi
            chart_dependencies=($(yq '[.dependencies[].name] | join(" ")' ${chart_name}/Chart.yaml))
            if (( ${#chart_dependencies[@]} )); then
              printf "${chart_name} %s\n" "${chart_dependencies[@]}" >> dependency-graph
            fi
          done
          
          echo ${GITHUB_TOKEN} | helm registry login -u ${{ github.repository_owner }} --password-stdin ghcr.io
          
          for chart_name in $(tsort dependency-graph | tac); do
            chart_version=$(yq .version ${chart_name}/Chart.yaml)
            if [[ ! -f ../../../gh-pages/${chart_name}-${chart_version}.tgz ]]; then
              # cd'ing into directory for charts having a dependency like:
              #  - name: kube-prometheus-crds
              #    repository: file://./charts/kube-prometheus-crds
              #    version: 0.x.x
              (cd ${chart_name} && helm dependency update && helm package -d .bin . && helm push .bin/${chart_name}-${chart_version}.tgz oci://ghcr.io/dalbani/freebitnamicharts)
            fi
          done
      - name: Build chart index
        run: |
          cd gh-pages

          helm repo index .
      - name: Commit and push updated files
        uses: actions-js/push@master
        with:
          message: Update charts
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
